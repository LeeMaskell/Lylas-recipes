{"version":3,"file":"component---src-pages-tags-js-eec581ff0163993b6ce5.js","mappings":"0MA0BA,UApBa,SAAC,GAAY,IAAXA,EAAU,EAAVA,KACLC,GAAUC,EAAAA,EAAAA,GAAUF,EAAKG,oBAAoBC,OACnD,OACI,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKC,MAAM,SACV,wBAAMC,UAAU,QACZ,2BAASA,UAAU,aACdL,EAAQM,KAAI,SAACC,EAAKC,GACjB,IAAOC,EAAeF,EAAtB,GAAaG,EAASH,EAAtB,GACG,OAAO,gBAAC,KAAD,CAAMI,GAAE,IAAMF,EAAQG,IAAKJ,EAAOH,UAAU,QAC/C,0BAAKI,GACL,yBAAIC,EAAJ,oB,mBCI1B,IArBgB,SAAAG,GACd,IAAMC,EAAU,GAiBhB,OAfAD,EAAQE,SAAQ,SAAAC,GACdA,EAAOC,QAAQC,KAAKH,SAAQ,SAAAR,GACtBO,EAAQP,GACVO,EAAQP,GAAOO,EAAQP,GAAO,EAE9BO,EAAQP,GAAO,QAILY,OAAOC,QAAQN,GAASO,MAAK,SAACC,EAAGC,GAC/C,IAAOC,EAAYF,EAAnB,GACOG,EAAaF,EAApB,GACA,OAAOC,EAASE,cAAcD","sources":["webpack://gatsby-starter-hello-world/./src/pages/tags.js","webpack://gatsby-starter-hello-world/./src/utils/setupTags.js"],"sourcesContent":["import React from 'react'\nimport Layout from '../components/Layout'\nimport { graphql, Link } from 'gatsby'\nimport setUpTags from '../utils/setupTags'\nimport SEO from \"../components/SEO\"\n\nconst Tags = ({data}) => {\n    const newTags = setUpTags(data.allContentfulRecipe.nodes)\n    return (\n        <Layout>\n          <SEO title=\"Tags\" />\n           <main className=\"page\">\n               <section className=\"tags-page\">\n                   {newTags.map((tag, index) => {\n                     const [text, value] = tag\n                        return <Link to={`/${text}`} key={index} className=\"tags\">\n                            <h5>{text}</h5>\n                            <p>{value} recipe</p>\n                        </Link>  \n                   })}\n               </section>\n           </main>\n        </Layout>\n    )\n}\n\nexport default Tags\n\nexport const query = graphql`\n  {\n    allContentfulRecipe {\n      nodes {\n        content {\n          tags\n        }\n      }\n    }\n  }\n`","const setupTags = recipes => {\n    const allTags = {}\n  \n    recipes.forEach(recipe => {\n      recipe.content.tags.forEach(tag => {\n        if (allTags[tag]) {\n          allTags[tag] = allTags[tag] + 1\n        } else {\n          allTags[tag] = 1\n        }\n      })\n    })\n    const newTags = Object.entries(allTags).sort((a, b) => {\n      const [firstTag] = a\n      const [secondTag] = b\n      return firstTag.localeCompare(secondTag)\n    })\n  \n    return newTags\n  }\n  \n  export default setupTags"],"names":["data","newTags","setUpTags","allContentfulRecipe","nodes","title","className","map","tag","index","text","value","to","key","recipes","allTags","forEach","recipe","content","tags","Object","entries","sort","a","b","firstTag","secondTag","localeCompare"],"sourceRoot":""}